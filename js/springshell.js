// Very similar to projects-with-dependencies.js, but only searches for springshell
// dependencies. The list of versions are hardcoded in this file because the GET
// /api/projects/{locator}/revisions endpoint only returns a maximum of 10
// versions for each dependency.
//
// Outputs a list of projects that use each springshell dependency along with their
// specific versions.

const Promise = require('bluebird');
const yargs = require('yargs/yargs');
const compareVersions = require('compare-versions');
const { hideBin } = require('yargs/helpers');

const argv = yargs(hideBin(process.argv))
  .command('$0')
  .option('endpoint', {
    type: 'string',
    description: 'FOSSA API service base URL',
  })
  .parse();

require('dotenv-safe').config();
const fossa = require('./fossa')({ token: process.env.FOSSA_API_TOKEN, endpoint: argv.endpoint });
const projectURL = locator => `${fossa.options.endpoint}/projects/${encodeURIComponent(locator)}`;

const springWebFluxVersions = [
  '5.0.0.RELEASE',
  '5.0.1.RELEASE',
  '5.0.2.RELEASE',
  '5.0.3.RELEASE',
  '5.0.4.RELEASE',
  '5.0.5.RELEASE',
  '5.0.6.RELEASE',
  '5.0.7.RELEASE',
  '5.0.8.RELEASE',
  '5.0.9.RELEASE',
  '5.0.10.RELEASE',
  '5.0.11.RELEASE',
  '5.0.12.RELEASE',
  '5.0.13.RELEASE',
  '5.0.14.RELEASE',
  '5.0.15.RELEASE',
  '5.0.16.RELEASE',
  '5.0.17.RELEASE',
  '5.0.18.RELEASE',
  '5.0.19.RELEASE',
  '5.0.20.RELEASE',
  '5.1.0.RELEASE',
  '5.1.1.RELEASE',
  '5.1.2.RELEASE',
  '5.1.3.RELEASE',
  '5.1.4.RELEASE',
  '5.1.5.RELEASE',
  '5.1.6.RELEASE',
  '5.1.7.RELEASE',
  '5.1.8.RELEASE',
  '5.1.9.RELEASE',
  '5.1.10.RELEASE',
  '5.1.11.RELEASE',
  '5.1.12.RELEASE',
  '5.1.13.RELEASE',
  '5.1.14.RELEASE',
  '5.1.15.RELEASE',
  '5.1.16.RELEASE',
  '5.1.17.RELEASE',
  '5.1.18.RELEASE',
  '5.1.19.RELEASE',
  '5.1.20.RELEASE',
  '5.2.0.RELEASE',
  '5.2.1.RELEASE',
  '5.2.2.RELEASE',
  '5.2.3.RELEASE',
  '5.2.4.RELEASE',
  '5.2.5.RELEASE',
  '5.2.6.RELEASE',
  '5.2.7.RELEASE',
  '5.2.8.RELEASE',
  '5.2.9.RELEASE',
  '5.2.10.RELEASE',
  '5.2.11.RELEASE',
  '5.2.12.RELEASE',
  '5.2.13.RELEASE',
  '5.2.14.RELEASE',
  '5.2.15.RELEASE',
  '5.2.16.RELEASE',
  '5.2.17.RELEASE',
  '5.2.18.RELEASE',
  '5.2.19.RELEASE',
  '5.2.20.RELEASE',
  '5.3.0',
  '5.3.1',
  '5.3.2',
  '5.3.3',
  '5.3.4',
  '5.3.5',
  '5.3.6',
  '5.3.7',
  '5.3.8',
  '5.3.9',
  '5.3.10',
  '5.3.11',
  '5.3.12',
  '5.3.13',
  '5.3.14',
  '5.3.15',
  '5.3.16',
  '5.3.17',
  '5.3.18',
];

const springBeansVersions = [
  '1.0-m4',
  '1.0-rc1',
  '1.0',
  '1.0.1',
  '1.2-rc1',
  '1.2-rc2',
  '1.2',
  '1.2.1',
  '1.2.2',
  '1.2.3',
  '1.2.4',
  '1.2.5',
  '1.2.6',
  '1.2.7',
  '1.2.8',
  '1.2.9',
  '2.0-m1',
  '2.0-m2',
  '2.0-m4',
  '2.0',
  '2.0.1',
  '2.0.2',
  '2.0.3',
  '2.0.4',
  '2.0.5',
  '2.0.6',
  '2.0.7',
  '2.0.8',
  '2.5',
  '2.5.1',
  '2.5.2',
  '2.5.3',
  '2.5.4',
  '2.5.5',
  '2.5.6',
  '2.5.6.SEC01',
  '2.5.6.SEC02',
  '2.5.6.SEC03',
  '3.0.0.RELEASE',
  '3.0.1.RELEASE',
  '3.0.2.RELEASE',
  '3.0.3.RELEASE',
  '3.0.4.RELEASE',
  '3.0.5.RELEASE',
  '3.0.6.RELEASE',
  '3.0.7.RELEASE',
  '3.1.0.RELEASE',
  '3.1.1.RELEASE',
  '3.1.2.RELEASE',
  '3.1.3.RELEASE',
  '3.1.4.RELEASE',
  '3.2.0.RELEASE',
  '3.2.1.RELEASE',
  '3.2.2.RELEASE',
  '3.2.3.RELEASE',
  '3.2.4.RELEASE',
  '3.2.5.RELEASE',
  '3.2.6.RELEASE',
  '3.2.7.RELEASE',
  '3.2.8.RELEASE',
  '3.2.9.RELEASE',
  '3.2.10.RELEASE',
  '3.2.11.RELEASE',
  '3.2.12.RELEASE',
  '3.2.13.RELEASE',
  '3.2.14.RELEASE',
  '3.2.15.RELEASE',
  '3.2.16.RELEASE',
  '3.2.17.RELEASE',
  '3.2.18.RELEASE',
  '4.0.0.RELEASE',
  '4.0.1.RELEASE',
  '4.0.2.RELEASE',
  '4.0.3.RELEASE',
  '4.0.4.RELEASE',
  '4.0.5.RELEASE',
  '4.0.6.RELEASE',
  '4.0.7.RELEASE',
  '4.0.8.RELEASE',
  '4.0.9.RELEASE',
  '4.1.0.RELEASE',
  '4.1.1.RELEASE',
  '4.1.2.RELEASE',
  '4.1.3.RELEASE',
  '4.1.4.RELEASE',
  '4.1.5.RELEASE',
  '4.1.6.RELEASE',
  '4.1.7.RELEASE',
  '4.1.8.RELEASE',
  '4.1.9.RELEASE',
  '4.2.0.RELEASE',
  '4.2.1.RELEASE',
  '4.2.2.RELEASE',
  '4.2.3.RELEASE',
  '4.2.4.RELEASE',
  '4.2.5.RELEASE',
  '4.2.6.RELEASE',
  '4.2.7.RELEASE',
  '4.2.8.RELEASE',
  '4.2.9.RELEASE',
  '4.3.0.RELEASE',
  '4.3.1.RELEASE',
  '4.3.2.RELEASE',
  '4.3.3.RELEASE',
  '4.3.4.RELEASE',
  '4.3.5.RELEASE',
  '4.3.6.RELEASE',
  '4.3.7.RELEASE',
  '4.3.8.RELEASE',
  '4.3.9.RELEASE',
  '4.3.10.RELEASE',
  '4.3.11.RELEASE',
  '4.3.12.RELEASE',
  '4.3.13.RELEASE',
  '4.3.14.RELEASE',
  '4.3.15.RELEASE',
  '4.3.16.RELEASE',
  '4.3.17.RELEASE',
  '4.3.18.RELEASE',
  '4.3.19.RELEASE',
  '4.3.20.RELEASE',
  '4.3.21.RELEASE',
  '4.3.22.RELEASE',
  '4.3.23.RELEASE',
  '4.3.24.RELEASE',
  '4.3.25.RELEASE',
  '4.3.26.RELEASE',
  '4.3.27.RELEASE',
  '4.3.28.RELEASE',
  '4.3.29.RELEASE',
  '4.3.30.RELEASE',
  '5.0.0.RELEASE',
  '5.0.1.RELEASE',
  '5.0.2.RELEASE',
  '5.0.3.RELEASE',
  '5.0.4.RELEASE',
  '5.0.5.RELEASE',
  '5.0.6.RELEASE',
  '5.0.7.RELEASE',
  '5.0.8.RELEASE',
  '5.0.9.RELEASE',
  '5.0.10.RELEASE',
  '5.0.11.RELEASE',
  '5.0.12.RELEASE',
  '5.0.13.RELEASE',
  '5.0.14.RELEASE',
  '5.0.15.RELEASE',
  '5.0.16.RELEASE',
  '5.0.17.RELEASE',
  '5.0.18.RELEASE',
  '5.0.19.RELEASE',
  '5.0.20.RELEASE',
  '5.1.0.RELEASE',
  '5.1.1.RELEASE',
  '5.1.2.RELEASE',
  '5.1.3.RELEASE',
  '5.1.4.RELEASE',
  '5.1.5.RELEASE',
  '5.1.6.RELEASE',
  '5.1.7.RELEASE',
  '5.1.8.RELEASE',
  '5.1.9.RELEASE',
  '5.1.10.RELEASE',
  '5.1.11.RELEASE',
  '5.1.12.RELEASE',
  '5.1.13.RELEASE',
  '5.1.14.RELEASE',
  '5.1.15.RELEASE',
  '5.1.16.RELEASE',
  '5.1.17.RELEASE',
  '5.1.18.RELEASE',
  '5.1.19.RELEASE',
  '5.1.20.RELEASE',
  '5.2.0.RELEASE',
  '5.2.1.RELEASE',
  '5.2.2.RELEASE',
  '5.2.3.RELEASE',
  '5.2.4.RELEASE',
  '5.2.5.RELEASE',
  '5.2.6.RELEASE',
  '5.2.7.RELEASE',
  '5.2.8.RELEASE',
  '5.2.9.RELEASE',
  '5.2.10.RELEASE',
  '5.2.11.RELEASE',
  '5.2.12.RELEASE',
  '5.2.13.RELEASE',
  '5.2.14.RELEASE',
  '5.2.15.RELEASE',
  '5.2.16.RELEASE',
  '5.2.17.RELEASE',
  '5.2.18.RELEASE',
  '5.2.19.RELEASE',
  '5.2.20.RELEASE',
  '5.3.0',
  '5.3.1',
  '5.3.2',
  '5.3.3',
  '5.3.4',
  '5.3.5',
  '5.3.6',
  '5.3.7',
  '5.3.8',
  '5.3.9',
  '5.3.10',
  '5.3.11',
  '5.3.12',
  '5.3.13',
  '5.3.14',
  '5.3.15',
  '5.3.16',
  '5.3.17',
  '5.3.18',
];

const springWebMvcVersions = [
  '1.0-rc1',
  '1.0',
  '1.0.1',
  '1.1-rc1',
  '1.1-rc2',
  '1.1',
  '1.1.1',
  '1.1.2',
  '1.1.3',
  '1.1.4',
  '1.1.5',
  '1.2-rc1',
  '1.2-rc2',
  '1.2',
  '1.2.1',
  '1.2.2',
  '1.2.3',
  '1.2.4',
  '1.2.5',
  '1.2.6',
  '1.2.7',
  '1.2.8',
  '1.2.9',
  '2.0-m1',
  '2.0-m2',
  '2.0',
  '2.0.1',
  '2.0.2',
  '2.0.3',
  '2.0.4',
  '2.0.5',
  '2.0.6',
  '2.0.7',
  '2.0.8',
  '2.5',
  '2.5.1',
  '2.5.2',
  '2.5.3',
  '2.5.4',
  '2.5.5',
  '2.5.6',
  '2.5.6.SEC01',
  '2.5.6.SEC02',
  '2.5.6.SEC03',
  '3.0.0.RELEASE',
  '3.0.1.RELEASE',
  '3.0.2.RELEASE',
  '3.0.3.RELEASE',
  '3.0.4.RELEASE',
  '3.0.5.RELEASE',
  '3.0.6.RELEASE',
  '3.0.7.RELEASE',
  '3.1.0.RELEASE',
  '3.1.1.RELEASE',
  '3.1.2.RELEASE',
  '3.1.3.RELEASE',
  '3.1.4.RELEASE',
  '3.2.0.RELEASE',
  '3.2.1.RELEASE',
  '3.2.2.RELEASE',
  '3.2.3.RELEASE',
  '3.2.4.RELEASE',
  '3.2.5.RELEASE',
  '3.2.6.RELEASE',
  '3.2.7.RELEASE',
  '3.2.8.RELEASE',
  '3.2.9.RELEASE',
  '3.2.10.RELEASE',
  '3.2.11.RELEASE',
  '3.2.12.RELEASE',
  '3.2.13.RELEASE',
  '3.2.14.RELEASE',
  '3.2.15.RELEASE',
  '3.2.16.RELEASE',
  '3.2.17.RELEASE',
  '3.2.18.RELEASE',
  '4.0.0.RELEASE',
  '4.0.1.RELEASE',
  '4.0.2.RELEASE',
  '4.0.3.RELEASE',
  '4.0.4.RELEASE',
  '4.0.5.RELEASE',
  '4.0.6.RELEASE',
  '4.0.7.RELEASE',
  '4.0.8.RELEASE',
  '4.0.9.RELEASE',
  '4.1.0.RELEASE',
  '4.1.1.RELEASE',
  '4.1.2.RELEASE',
  '4.1.3.RELEASE',
  '4.1.4.RELEASE',
  '4.1.5.RELEASE',
  '4.1.6.RELEASE',
  '4.1.7.RELEASE',
  '4.1.8.RELEASE',
  '4.1.9.RELEASE',
  '4.2.0.RELEASE',
  '4.2.1.RELEASE',
  '4.2.2.RELEASE',
  '4.2.3.RELEASE',
  '4.2.4.RELEASE',
  '4.2.5.RELEASE',
  '4.2.6.RELEASE',
  '4.2.7.RELEASE',
  '4.2.8.RELEASE',
  '4.2.9.RELEASE',
  '4.3.0.RELEASE',
  '4.3.1.RELEASE',
  '4.3.2.RELEASE',
  '4.3.3.RELEASE',
  '4.3.4.RELEASE',
  '4.3.5.RELEASE',
  '4.3.6.RELEASE',
  '4.3.7.RELEASE',
  '4.3.8.RELEASE',
  '4.3.9.RELEASE',
  '4.3.10.RELEASE',
  '4.3.11.RELEASE',
  '4.3.12.RELEASE',
  '4.3.13.RELEASE',
  '4.3.14.RELEASE',
  '4.3.15.RELEASE',
  '4.3.16.RELEASE',
  '4.3.17.RELEASE',
  '4.3.18.RELEASE',
  '4.3.19.RELEASE',
  '4.3.20.RELEASE',
  '4.3.21.RELEASE',
  '4.3.22.RELEASE',
  '4.3.23.RELEASE',
  '4.3.24.RELEASE',
  '4.3.25.RELEASE',
  '4.3.26.RELEASE',
  '4.3.27.RELEASE',
  '4.3.28.RELEASE',
  '4.3.29.RELEASE',
  '4.3.30.RELEASE',
  '5.0.0.RELEASE',
  '5.0.1.RELEASE',
  '5.0.2.RELEASE',
  '5.0.3.RELEASE',
  '5.0.4.RELEASE',
  '5.0.5.RELEASE',
  '5.0.6.RELEASE',
  '5.0.7.RELEASE',
  '5.0.8.RELEASE',
  '5.0.9.RELEASE',
  '5.0.10.RELEASE',
  '5.0.11.RELEASE',
  '5.0.12.RELEASE',
  '5.0.13.RELEASE',
  '5.0.14.RELEASE',
  '5.0.15.RELEASE',
  '5.0.16.RELEASE',
  '5.0.17.RELEASE',
  '5.0.18.RELEASE',
  '5.0.19.RELEASE',
  '5.0.20.RELEASE',
  '5.1.0.RELEASE',
  '5.1.1.RELEASE',
  '5.1.2.RELEASE',
  '5.1.3.RELEASE',
  '5.1.4.RELEASE',
  '5.1.5.RELEASE',
  '5.1.6.RELEASE',
  '5.1.7.RELEASE',
  '5.1.8.RELEASE',
  '5.1.9.RELEASE',
  '5.1.10.RELEASE',
  '5.1.11.RELEASE',
  '5.1.12.RELEASE',
  '5.1.13.RELEASE',
  '5.1.14.RELEASE',
  '5.1.15.RELEASE',
  '5.1.16.RELEASE',
  '5.1.17.RELEASE',
  '5.1.18.RELEASE',
  '5.1.19.RELEASE',
  '5.1.20.RELEASE',
  '5.2.0.RELEASE',
  '5.2.1.RELEASE',
  '5.2.2.RELEASE',
  '5.2.3.RELEASE',
  '5.2.4.RELEASE',
  '5.2.5.RELEASE',
  '5.2.6.RELEASE',
  '5.2.7.RELEASE',
  '5.2.8.RELEASE',
  '5.2.9.RELEASE',
  '5.2.10.RELEASE',
  '5.2.11.RELEASE',
  '5.2.12.RELEASE',
  '5.2.13.RELEASE',
  '5.2.14.RELEASE',
  '5.2.15.RELEASE',
  '5.2.16.RELEASE',
  '5.2.17.RELEASE',
  '5.2.18.RELEASE',
  '5.2.19.RELEASE',
  '5.2.20.RELEASE',
  '5.3.0',
  '5.3.1',
  '5.3.2',
  '5.3.3',
  '5.3.4',
  '5.3.5',
  '5.3.6',
  '5.3.7',
  '5.3.8',
  '5.3.9',
  '5.3.10',
  '5.3.11',
  '5.3.12',
  '5.3.13',
  '5.3.14',
  '5.3.15',
  '5.3.16',
  '5.3.17',
  '5.3.18',
];

const dependencies = [
  ['mvn+org.springframework:spring-beans', springBeansVersions],
  ['mvn+org.springframework:spring-webflux', springWebFluxVersions],
  ['mvn+org.springframework:spring-webmvc', springWebMvcVersions],
];

const toLocators = (dependency, revisions) => revisions.map(rev => `${dependency}$${rev}`);
const compareLocators = (a, b) => {
  const vA = a.split('$')[1];
  const vB = b.split('$')[2];
  if (compareVersions.validate(vA) && compareVersions.validate(vB)) return compareVersions(vA, vB);
  return -1;
};
const result = {};
Promise.all(Promise.map(dependencies, ([dependency, revisions]) => {

  return Promise.all(Promise.map(toLocators(dependency, revisions), loc => {
    if (!result[loc]) result[loc] = new Set();
    console.error(`Fetching parent projects for ${loc}...`);
    return fossa.getParentProjects(loc).catch(err => {
      console.error(`Failed to fetch parent projects: ${err}`);
      if (err.response.status === 404) {
        console.error(err.response.data);
        return Promise.resolve([]);
      }
      return Promise.reject(err);
    }).then(parents => {
      console.error(`Fetched ${parents.length} parent projects for ${loc}`);
      parents.forEach(p => result[loc].add(projectURL(p.locator)));
    })
  }), { concurrency: 10 }).then(_ => {
    Object.keys(result).sort(compareLocators).forEach(locator => {
      if (result[locator].size) {
        const projects = Array.from(result[locator]).sort();
        console.log(`${locator} (${projects.length})`);
        console.log(projects.join('\n') + '\n');
      }
    });
  }).catch(err => {
    console.error(err);
    process.exit(1);
  });
}), { concurrency: 10 });
